[build-system]
    build-backend = "poetry.core.masonry.api"
    requires      = ["poetry-core>=1.0.0"]

[tool.poetry]
    authors     = ["John Smith <john@example.com>"]
    description = "A Python package that ..."
    homepage    = "https://github.com/natelandau/testharness"
    keywords    = []
    license     = "AGPL-3.0-or-later"
    name        = "testharness"
    readme      = "README.md"
    repository  = "https://github.com/natelandau/testharness"
    version     = "0.1.0"

    [tool.poetry.scripts] # https://python-poetry.org/docs/pyproject/#scripts
        testharness = "testharness.testharness:app"

    [tool.poetry.dependencies]
        confz             = "^2.0.1"
        python            = "^3.11"
        quart             = "^0.19.6"
        quart-flask-patch = "^0.3.0"
        quart-session     = "^3.0.0"
        redis             = "^5.0.8"
        rich              = "^13.7.1"

    [tool.poetry.group.dev.dependencies]
        commitizen = "^3.24.0"
        djlint     = "^1.34.1"
        mypy       = "^1.10.0"
        pre-commit = "^3.7.1"
        ruff       = "^0.6.1"

[tool.commitizen]
    bump_message               = "bump(release): v$current_version â†’ v$new_version"
    changelog_merge_prerelease = true
    tag_format                 = "v$version"
    update_changelog_on_bump   = true
    version_files              = ["src/testharness/constants.py:VERSION"]
    version_provider           = "poetry"

[tool.djlint]
    extend_exclude = ".vscode, .github, .git, .ruff_cache, .pytest_cache, __pycache__, .mypy_cache, .venv, tests, src/valentina/cogs, src/valentina/models, src/valentina/utils, src/valentina/views, tests"
    ignore         = "H030,H031,H021,H006,H013"
    # ignore_case    = true
    use_gitignore = true

[tool.mypy] # https://mypy.readthedocs.io/en/latest/config_file.html
    disallow_any_unimported = false
    disallow_subclassing_any = false
    disallow_untyped_decorators = false
    disallow_untyped_defs = true
    exclude = [
        'tests/', # TOML literal string (single-quotes, regex okay, no escaping necessary)
    ]
    follow_imports = "normal"
    ignore_missing_imports = true
    junit_xml = "reports/mypy.xml"
    no_implicit_optional = true
    pretty = false
    show_column_numbers = true
    show_error_codes = true
    show_error_context = true
    strict_optional = true
    warn_redundant_casts = true
    warn_unreachable = true
    warn_unused_ignores = true

[tool.ruff] # https://github.com/charliermarsh/ruff
    fix            = true
    line-length    = 100
    output-format  = "grouped"
    src            = ["src", "tests"]
    target-version = "py311"

    [tool.ruff.lint]
        ignore = [
            "B006",    # mutable-argument-default
            "B008",    # function-call-in-default-argument
            "COM812",  # Trailing comma missing"
            "CPY001",  # Missing copyright notice at top of file
            "D107",    # undocumented-public-init
            "D213",    # multi-line-summary-second-line
            "D215",    # section-underline-not-over-indented
            "D406",    # new-line-after-section-name
            "D407",    # dashed-underline-after-section
            "D408",    # section-underline-after-name
            "D409",    # section-underline-matches-section-length
            "D413",    # blank-line-after-last-section
            "E501",    # line-too-long
            "FIX002",  # Line contains TODO, consider resolving the issue
            "ISC001",  # single-line-implicit-string-concatenation
            "N805",    # invalid-first-argument-name-for-method
            "PLR0913", # too-many-arguments
            "S311",    # suspicious-non-cryptographic-random-usage
            "TD002",   # Missing author in TODO
            "TD003",   # Missing issue link on the line following this TODO
            "UP007",   # non-pep604-annotation
        ]
        per-file-ignores = { "testharness.py" = [
            "PLR0912",
            "PLR0913",
            "PLR0917",
        ], "tests/*.py" = [
            "A002",
            "A003",
            "ARG002",
            "ARG005",
            "D102",
            "ERA001",
            "F403",
            "PGH003",
            "PLR0913",
            "PLR0917",
            "PLR2004",
            "PLR6301",
            "S101",
        ] }
        select = ["ALL"]
        unfixable = ["E712", "ERA001", "F401", "F841", "UP007"]
        [tool.ruff.lint.mccabe]
            # Unlike Flake8, default to a complexity level of 10.
            max-complexity = 10

        [tool.ruff.lint.pydocstyle]
            convention = "google"

        [tool.ruff.lint.pylint]
            max-args = 6

[tool.ruff.format]
    indent-style              = "space"
    line-ending               = "auto"
    quote-style               = "double"
    skip-magic-trailing-comma = false
